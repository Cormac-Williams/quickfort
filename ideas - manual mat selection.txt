Add --mode=keylist for output like ['d', '{Enter}', '8'] so we can more easily split these up in QFAHK
    and not Send all of them at once in keys mode (allow Alt+C to work again); also will make it easier
    to inject manual mat selection keycodes and act on them

Add manual mat selection keycodes understood by QFAHK:
    {SelectMat 1 123} 
        selects material memorized as :1 (or memorizes it) then sends {Enter} 123 times
    
    {EnterWaitChange 1} 
        sends {Enter} then waits for screen region defined from :1's x1 coord to visibly change
        has no effect if nothing is memorized for :1 yet

            initialHash := GetScreenRegionHash(x,y,w,h)
            Send, {Enter}
            ScreenRegionWaitChange(x,y,w,h,initialHash)

Transform this:
    #build
    Cw:foo,Cw:foo,Cw:foo

into this:
    {Esc}Cw6kk{EnterWaitChange foo}{SelectMat foo 3}

with -mkeylist:
    ['{Esc}','C','w','6','k','k','{EnterWaitChange foo}','{SelectMat foo 3}']


Routine upon encountering a :1 cell:
    (Enter mat selection screen)

    if (MatSelectUseGeneric_%label%)
    {
        SelectMatsGeneric(count)
        return
    }

    if (!IsMatMemorized("1"))
        MemorizeMat("1")
    
    while (True)
    {
        if (SearchForMat("1"))
        {
            SelectMat("1", count)
            break
            ; Consider Searching between every SelectMat: if we run out of materials, we could
            ; thereby catch it here and prevent QF from going off the rails
        }
        ; Mat wasn't found!
        ClearMemorizedMat(label)
        Prompt user:
            Error: Could not find the material memorized for :1.

            Re-memorize the material selection for :1?

            Yes: Re-memorize
            No: Use generic material selection (first-in-list)
            Cancel: cancel playback
            
        IfMsgBox, Yes:
            MemorizeAndVerifyMat("1")
        IfMsgBox, No:
            MatSelectUseGeneric_%label% := true
        IfMsgBox, Cancel:
            Building := 0
            return
    }

    ; DONE. We memorized the mat if needed then selected the mat however many times we wanted to.

SelectMatsGeneric(count)
{
    count := round(1 + sqrt(count))
    keys := +{Enter}{+} * count
    Send keys
}

IsMatMemorized(label)
{
    global MatSelectMemorized_%label%
    return (MatSelectMemorized_%label% == true)
}

MemorizeAndVerifyMat(label)
{
    global MatSelectMemorized_
    ready := false
    While (!ready)
    {
        MemorizeMat(label)
        ready := VerifyMat(label)
    }
    MatSelectMemorized_%label% == true
}

MemorizeMat(label)
{
    // Handle Alt+C by testing Building var at each wait
    // Might not have to pass Alt+C RETURN values up the chain if we can just kill the thread w/ Alt+C :D
    Prompt user:
        Memorizing material for :1
        Step 1: Use the +-/* keys to HIGHLIGHT the desired material.
        Step 2: Click the CENTER of the FIRST letter of the highlighted material.

        Press Alt+C to cancel playback.
        // Possible future featur - may get thrown off by moving DF window or zooming it
        // Press Alt+L to REUSE the same material chosen last time for :1.
    Wait for mouse click x1, y1
    Prompt user:
        Memorizing material for :1
        Step 3: Click to the RIGHT of the LAST letter.
        If the material name extends under the Dist column, click just to the LEFT of the Dist column instead.

        Press Alt+C to cancel playback.
    Wait for mouse click x2, y2
    Memorize clip and coordinates with the :label e.g. MatSelectX1_label
}

VerifyMat(label)
{
    Prompt user:
        Verifying material for :1
        Quickfort is searching for your material to verify it.

        Press Alt+C to cancel playback.
    Call SearchForMat("1")
    Prompt user:
        Verify material for :1
        
        Is the correct material for :1 now highlighted?

        Press Y if the correct material is highlighted.
        Press N to retry memorizing your material.

        Press Alt+C to cancel playback.
    If Y:
        RETURN true
    If N:
        RETURN false
    If Alt+C:
        RETURN -255
}

Mat selection after :1 is memorized:
SelectMat(label, count)
{
    if SearchForMat(label) == false:
        ; couldn't find the mat!

        if cancel:
            RETURN -255
    Send {Enter %count%}
    RETURN true
}

ClearMemorizedMat(label)
{
    ?? will globals work where we can global foo_ and thereby access foo_bar and foo_baz, not just foo_1 and foo_2??
    ?? start using REAL arrays ??
    global MatSelectX1_, ...

    MatSelectMemorized_%label% == false
    MatSelectX1_%label% =
    ...
}

SearchForMat(label)
{
    local i := 0, found := false
    For (i = 0; i < 200 && !found; i++)
    {
        if (!Building) // Alt+C catcher
            RETURN -255
        Send {+}
        Sleep, 50
        found := ImageSearch(...)
    }

    return found
}